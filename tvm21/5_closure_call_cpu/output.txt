[DEBUG] Init persistent frame
[DEBUG] InvokeSegment
[DEBUG] pc in segment
18 19 20 21 22 7 8 9 10 11 0 1 2 3 4 5 6 12 13 14 15 16 17 23 24 25 26 27 
UPDATE PC!18 / 18
[DEBUG] ### pc = 18, execute: vm.builtin.check_tensor_info
UPDATE PC!19 / 19
[DEBUG] ### pc = 19, execute: vm.builtin.check_tensor_info
UPDATE PC!20 / 20
[DEBUG] ### pc = 20, execute: vm.builtin.match_shape
UPDATE PC!21 / 21
[DEBUG] ### pc = 21, execute: vm.builtin.match_shape
UPDATE PC!22 / 22
[DEBUG] ### pc = 22, execute: foo
[DEBUG] Case Closure - func name: foo
[DEBUG] NEW closure - args: 2
UPDATE PC!7 / 7
[DEBUG] ### pc = 7, execute: vm.builtin.check_tensor_info
UPDATE PC!8 / 8
[DEBUG] ### pc = 8, execute: vm.builtin.check_tensor_info
UPDATE PC!9 / 9
[DEBUG] ### pc = 9, execute: vm.builtin.match_shape
UPDATE PC!10 / 10
[DEBUG] ### pc = 10, execute: vm.builtin.match_shape
UPDATE PC!11 / 11
[DEBUG] ### pc = 11, execute: bar
[DEBUG] Case Closure - func name: bar
[DEBUG] NEW closure - args: 1
UPDATE PC!0 / 0
[DEBUG] ### pc = 0, execute: vm.builtin.check_tensor_info
UPDATE PC!1 / 1
[DEBUG] ### pc = 1, execute: vm.builtin.match_shape
UPDATE PC!2 / 2
[DEBUG] ### pc = 2, execute: vm.builtin.alloc_storage
[DEBUG] save return value / frame length: 3 / instr dst: 1
UPDATE PC!3 / 3
[DEBUG] ### pc = 3, execute: vm.builtin.alloc_tensor
[DEBUG] save return value / frame length: 3 / instr dst: 2
UPDATE PC!4 / 4
[DEBUG] ### pc = 4, execute: vm.builtin.null_value
[DEBUG] save return value / frame length: 3 / instr dst: 1
UPDATE PC!5 / 5
[DEBUG] ### pc = 5, execute: factorial_impl
UPDATE PC!6 / 6
[DEBUG] ### pc = 6, return: factorial_impl
[DEBUG] Save return value in RET / frame length: 0 / caller return register: 2
UPDATE PC!12 / 12
[DEBUG] ### pc = 12, execute: vm.builtin.alloc_storage
[DEBUG] save return value / frame length: 2 / instr dst: 3
UPDATE PC!13 / 13
[DEBUG] ### pc = 13, execute: vm.builtin.alloc_tensor
[DEBUG] save return value / frame length: 2 / instr dst: 4
UPDATE PC!14 / 14
[DEBUG] ### pc = 14, execute: vm.builtin.null_value
[DEBUG] save return value / frame length: 2 / instr dst: 3
UPDATE PC!15 / 15
[DEBUG] ### pc = 15, execute: add
UPDATE PC!16 / 16
[DEBUG] ### pc = 16, execute: vm.builtin.null_value
[DEBUG] save return value / frame length: 2 / instr dst: 2
UPDATE PC!17 / 17
[DEBUG] ### pc = 17, return: vm.builtin.null_value
[DEBUG] Save return value in RET / frame length: 0 / caller return register: 2
UPDATE PC!23 / 23
[DEBUG] ### pc = 23, execute: vm.builtin.alloc_storage
[DEBUG] save return value / frame length: 1 / instr dst: 3
UPDATE PC!24 / 24
[DEBUG] ### pc = 24, execute: vm.builtin.alloc_tensor
[DEBUG] save return value / frame length: 1 / instr dst: 4
UPDATE PC!25 / 25
[DEBUG] ### pc = 25, execute: vm.builtin.null_value
[DEBUG] save return value / frame length: 1 / instr dst: 3
UPDATE PC!26 / 26
[DEBUG] ### pc = 26, execute: multiply
UPDATE PC!27 / 27
[DEBUG] ### pc = 27, execute: vm.builtin.null_value
[DEBUG] save return value / frame length: 1 / instr dst: 2
[DEBUG] persitent frame length: 1
Run segment: 0
